xlab('Percent of land used for agriculture')+
ylab('Number of Countries')
ggplot(data=subset(tidyagri,year%%10 %in% c(1,6)),aes(x=year,y=percent,group=year))+
geom_boxplot()+
title('Percent of land used for agriculture per year')+
xlab('Year')+
ylab('Percent of land')
ggplot(data=subset(tidyagri,year%%10 %in% c(1,6)),aes(x=year,y=percent,group=year))+
geom_boxplot()+
xlab('Year')+
ylab('Percent of land')
ggplot(data=subset(tidyagri,year%%10 %in% c(1,6)),aes(x=year,y=percent,group=year))+
geom_boxplot()+
xlab('Year')+
ylab('Percent of land')
ggsave('percentbox.png')
ggplot(data=subset(tidyagri,year>=1990),aes(x=percent))+
geom_histogram(binwidth=5)+
facet_wrap(~year,nrow=4)+
xlab('Percent of land used for agriculture')+
ylab('Number of Countries')
ggsave('percentHistogram.png')
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
getwd()
setwd('../lesson4')
list.files()
agri<-read.csv("abirthdaysExample.csv")
library(ggplot2)
getwd()
setwd('../lesson4')
list.files()
bday<-read.csv("birthdaysExample.csv")
View(bday)
library(ggplot2)
getwd()
setwd('../lesson4')
list.files()
bday<-read.csv("birthdaysExample.csv")
summary(bday)
View(bday)
library(ggplot2)
library(tidyverse)
getwd()
setwd('../lesson4')
list.files()
bday<-read.csv("birthdaysExample.csv")
summary(bday)
library(lubridate)
parse_date_time(bday,"D")
library(lubridate)
parse_date_time(bday,"mdy")
View(bday)
View(bday)
library(lubridate)
parse_date_time(bday$dates,"mdy")
library(lubridate)
parse_date_time(bday$dates,"mdy")%>%
mutate(year=year(dates))
library(lubridate)
bday<-parse_date_time(bday$dates,"mdy")
mutate(bday,year=year(dates))
year(bday$dates)
year(bday)
library(ggplot2)
library(tidyverse)
getwd()
setwd('../lesson4')
list.files()
bday<-read.csv("birthdaysExample.csv")
summary(bday)
library(lubridate)
bday$dates<-parse_date_time(bday$dates,"mdy")
mutate(bday,year=year(dates))
library(lubridate)
bday$dates<-parse_date_time(bday$dates,"mdy")
mutate(bday,year=year(dates),month=month(dates),day=day(dates),doy=yday(dates))
mutate(bday,year=year(dates),month=month(dates),day=day(dates),doy=yday(dates))
library(ggplot2)
library(tidyverse)
getwd()
setwd('../lesson4')
list.files()
bday<-read.csv("birthdaysExample.csv")
summary(bday)
library(lubridate)
bday$dates<-parse_date_time(bday$dates,"mdy")
library(lubridate)
bday$dates<-parse_date_time(bday$dates,"mdy")
library(ggplot2)
library(tidyverse)
getwd()
setwd('../lesson4')
list.files()
bday<-read.csv("birthdaysExample.csv")
summary(bday)
library(lubridate)
bday$dates<-parse_date_time(bday$dates,"mdy")
mutate(bday,year=year(dates),month=month(dates),day=day(dates),doy=yday(dates))
bday<-mutate(bday,year=year(dates),month=month(dates),day=day(dates),doy=yday(dates))
ggplot(data=bday,aes(x=month))+
geom_histogram()
ggplot(data=bday,aes(x=month))+
geom_histogram(binwidth=1)
ggplot(data=bday,aes(x=month))+
geom_histogram(binwidth=1)+
scale_x_continuous()
ggplot(data=bday,aes(x=month))+
geom_histogram(binwidth=1)+
scale_x_continuous(c(1,12))
ggplot(data=bday,aes(x=month))+
geom_histogram(bins=c(1,12,1))
ggplot(data=bday,aes(x=month))+
geom_histogram(bins=c(1,12))
ggplot(data=bday,aes(x=month))+
geom_histogram(bins=12)
ggplot(data=bday,aes(x=month))+
geom_count()
ggplot(data=bday,aes(month))+
geom_count()
ggplot(data=bday,aes(x=month))+
geom_count()
ggplot(data=bday,aes(x=month))+
geom_histogram()
ggplot(data=bday,aes(x=month))+
stat_count()
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_discrete()
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_discrete(breaks=c(1,12))
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_continuous(breaks=c(1,12))
c(1,12)
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
g<-ggplot(data=bday,aes(x=month))
g+stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
sum(bday$month)
by(bday,month)
summary(bday$month)
bday$month
sum(bday$month)
count(bday,month)
count(bday,month)
g<-ggplot(data=bday,aes(x=month))
g+stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
max(count(bday,month))
g<-ggplot(data=bday,aes(x=month))
g+stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
bday$month(max(count(bday,month)))
bday$month[max(count(bday,month))]
g<-ggplot(data=bday,aes(x=month))
g+stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
bday$month[max(count(bday,month))]
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
ggplot(data=bday,aes(x=doy))+
stat_count()+
scale_x_continuous(breaks=seq(1,365,1))
count(bday,doy)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(color=month
ggplot(data=bday,aes(x=day))+
geom_freqpoly(color=month)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(color=month,bins=31)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(color=month,bins=31)
bday$month[max(count(bday,month))]
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
ggplot(data=bday,aes(x=day))+
geom_freqpoly(color=month,bins=31)
ggplot(data=bday,aes(x=day,color=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,color=month))+
geom_freqpoly(color=month,bins=31)
ggplot(data=bday,aes(x=day,color=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,colour=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,color=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(day,color=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,color=month))+
geom_freqpoly()
View(bday)
ggplot(data=bday,aes(x=day,y=..count..,color=month))+
geom_freqpoly()
ggplot(data=bday,aes(x=day,y=..count..,color=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,y=..count../sum(..count..),color=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,color=month))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,color=year))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,color=month))+
geom_freqpoly(bins=31)
View(bday)
ggplot(data=bday,aes(x=month,color=day))+
geom_freqpoly(bins=31)
ggplot(data=bday,aes(x=day,))+
stat_count()+
scale_x_continuous(breaks=seq(1,12,1))+
facet_wrap(~month)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=month))
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=month),bins=31)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
scale_color_gradient(low='blue',high='red')
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
scale_color_discrete()
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
scale_color_hue()
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
scale_color_brewer()
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
scale_color_brewer(palette = "Spectral")
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
bday$date[max(count(bday,doy))]
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
bday$date[max(count(bday,doy))]
bday$date[min(count(bday,doy))]
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
bday$date[max(count(bday,doy))]
min(count(bday,doy))
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
[max(count(bday,doy))]
max(count(bday,doy))
bday$date[max(count(bday,doy))]
min(count(bday,doy))
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy)
bday$date[max(count(bday,doy))]
(count(bday,doy))
bday$date[max(count(bday,doy))]
min(count(bday,doy))
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy))
max(count(bday,doy))
bday$date[max(count(bday,doy))]
min(count(bday,doy))
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,month))
(count(bday,day))
(count(bday,doy))
max((count(bday,doy)))
max(count(bday,doy)$n)
bday$month[max(count(bday,month)$n)]
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
(count(bday,doy))
max(count(bday,doy)$n)
bday$date[max(count(bday,doy)$n)]
min(count(bday,doy)$n)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
count(bday,month,sort=True)
count(bday,month,sort=TRUE)
ggplot(data=bday,aes(x=month))+
stat_count()+
scale_x_continuous(breaks=seq(1,12,1))
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday$date[max(count(bday,doy)$n)]
min(count(bday,doy)$n)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday$date[(count(bday,doy,sort=TRUE))]
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday$date(count(bday,doy,sort=TRUE))
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
(count(bday,doy,sort=TRUE))$date
min(count(bday,doy)$n)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
(count(bday,doy)$n)
min(count(bday,doy)$n)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
(count(bday,doy))
min(count(bday,doy)$n)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
max((count(bday,doy)))
min(count(bday,doy)$n)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
max(count(bday,doy)$n)
min(count(bday,doy)$n)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(doy)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(date)
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(dates)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(dates)%>%
summarise(n)
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(dates)%>%
summarise_each(n)
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(dates)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
(count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(doy)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
# (count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
group_by(doy)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
# (count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
count(doy)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
# (count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
count(doy,sort=TRUE)
ggplot(data=bday,aes(x=day))+
geom_freqpoly(aes(color=factor(month)),bins=31)+
labs(x="Day of month",color="Month")
# (count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
add_count(doy,sort=TRUE)
# (count(bday,doy,sort=TRUE))
# max(count(bday,doy,sort=True))
bday %>%
add_count(doy)
tidyverse_packages()
tidyverse_update()
tidyverse_update(recursive=TRUE)
library(tidyverse)
tidyverse_update(recursive=TRUE)
library(bindr)
install.packages("bindr")
library(bindr)
tidyverse_update(recursive=TRUE)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
rm(list=ls())
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:tibble", unload=TRUE)
detach("package:tidyr", unload=TRUE)
detach("package:tidyverse", unload=TRUE)
detach("package:utils", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:readr", unload=TRUE)
detach("package:purrr", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:datasets", unload=TRUE)
detach("package:dplyr", unload=TRUE)
tidyverse_update(recursive=TRUE)
install.packages("tidyverse")
library()
library(tidyverse)
tidyverse_update(recursive=TRUE)
install.packages("bindrcpp")
library("bindr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
install.packages(c("assertthat", "BH", "boot", "broom", "cluster", "crayon", "curl", "DBI", "digest", "dplyr", "foreign", "haven", "hms", "httr", "jsonlite", "lattice", "lazyeval", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "pryr", "psych", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rpart", "scales", "stringi", "survival", "swirl", "testthat", "tibble", "tidyr", "tidyverse", "xml2", "yaml"))
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:stats", unload=TRUE)
library("stats", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c("digest", "haven", "mgcv", "Rcpp", "rpart", "tibble", "xml2"))
install.packages(c("digest", "haven", "mgcv", "Rcpp", "rpart", "tibble", "xml2"))
install.packages(c("digest", "haven", "mgcv", "Rcpp", "rpart", "tibble", "xml2"))
install.packages(c("digest", "haven", "mgcv", "Rcpp", "rpart", "tibble", "xml2"))
install.packages("digest")
install.packages("digest")
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:digest", unload=TRUE)
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:digest", unload=TRUE)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:swirl", unload=TRUE)
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:digest", unload=TRUE)
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:datasets", unload=TRUE)
detach("package:graphics", unload=TRUE)
library("graphics", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:stats", unload=TRUE)
library("stats", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("stringi", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:stringi", unload=TRUE)
library("stringi", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:stringr", unload=TRUE)
detach("package:stringi", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:methods", unload=TRUE)
library("methods", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:RCurl", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:utils", unload=TRUE)
library("utils", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("rlang", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:rlang", unload=TRUE)
library("rlang", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("testthat", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:testthat", unload=TRUE)
detach("package:rlang", unload=TRUE)
detach("package:utils", unload=TRUE)
detach("package:bitops", unload=TRUE)
